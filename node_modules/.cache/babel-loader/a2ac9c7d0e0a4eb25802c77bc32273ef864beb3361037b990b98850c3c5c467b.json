{"ast":null,"code":"var _jsxFileName = \"/Users/amananand/Downloads/Personal Bookshelf/src/components/BookSearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookSearchPage = _ref => {\n  _s();\n  let {\n    addToBookshelf\n  } = _ref;\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Function to clear search results when component mounts\n    const clearSearchResults = () => {\n      setBooks([]);\n    };\n    // Clear search results when component mounts\n    clearSearchResults();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const searchBooks = async query => {\n    setIsLoading(true);\n    if (query.length === 0) {\n      setBooks([]);\n      setIsLoading(false);\n      return;\n    }\n    const response = await fetch(`https://openlibrary.org/search.json?q=${query}&limit=10&page=1`);\n    const data = await response.json();\n    setBooks(data.docs);\n    setIsLoading(false);\n    // Navigate to /search after search is performed\n    navigate('/search');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: searchBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      books: books,\n      addToBookshelf: addToBookshelf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BookSearchPage, \"SJ4SjsTy5fFCO8WRtZC7yT94Cn4=\", false, function () {\n  return [useNavigate];\n});\n_c = BookSearchPage;\nexport default BookSearchPage;\nvar _c;\n$RefreshReg$(_c, \"BookSearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Routes","Route","SearchBar","SearchResults","jsxDEV","_jsxDEV","BookSearchPage","_ref","_s","addToBookshelf","navigate","books","setBooks","isLoading","setIsLoading","clearSearchResults","searchBooks","query","length","response","fetch","data","json","docs","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/amananand/Downloads/Personal Bookshelf/src/components/BookSearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Routes, Route } from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResults';\n\nconst BookSearchPage = ({ addToBookshelf }) => {\n  const navigate = useNavigate();\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Function to clear search results when component mounts\n    const clearSearchResults = () => {\n      setBooks([]);\n    };\n    // Clear search results when component mounts\n    clearSearchResults();\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  const searchBooks = async (query) => {\n    setIsLoading(true);\n    if (query.length === 0) {\n      setBooks([]);\n      setIsLoading(false);\n      return;\n    }\n    const response = await fetch(`https://openlibrary.org/search.json?q=${query}&limit=10&page=1`);\n    const data = await response.json();\n    setBooks(data.docs);\n    setIsLoading(false);\n    // Navigate to /search after search is performed\n    navigate('/search');\n  };\n\n  return (\n    <div>\n      <SearchBar onSearch={searchBooks} />\n      {/* Show loader while loading */}\n      {isLoading && <div className=\"loader\"></div>}\n      <SearchResults books={books} addToBookshelf={addToBookshelf} />\n    </div>\n  );\n};\n\nexport default BookSearchPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC7D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACxC,MAAMG,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;MAC/BH,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC;IACD;IACAG,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAIG,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtBN,QAAQ,CAAC,EAAE,CAAC;MACZE,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCH,KAAM,kBAAiB,CAAC;IAC9F,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCV,QAAQ,CAACS,IAAI,CAACE,IAAI,CAAC;IACnBT,YAAY,CAAC,KAAK,CAAC;IACnB;IACAJ,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACH,SAAS;MAACuB,QAAQ,EAAET;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAEnChB,SAAS,iBAAIR,OAAA;MAAKyB,SAAS,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC5CxB,OAAA,CAACF,aAAa;MAACQ,KAAK,EAAEA,KAAM;MAACF,cAAc,EAAEA;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3D;AAEV,CAAC;AAACrB,EAAA,CArCIF,cAAc;EAAA,QACDP,WAAW;AAAA;AAAAgC,EAAA,GADxBzB,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}